//Exercício 2 : Altere o exercício 1 para que a frequência da piscada seja
//função de uma entrada E. Quando E estiver em nivel alto, o led pisca a 2 Hz,
//caso contrário pisca a 7 Hz. O led é ativo em HIGH e conectado ao PB0. A
//entrada E será feita através do pino PC1. Utilize o TIM10.
//2HZ PSC=3999  ARR=9999
//7HZ PSC=9999  ARR=113


#include "main.h"

	void tempo (void) {
	if((GPIOC->IDR&=0x2) == 0x00000000) {//TESTA SE O PC1 PINO DE ENTRADA ESTA EM SINAL LOGICO ALTO
		TIM10->PSC=1142;
		TIM10->ARR=999;
	}
	else {
		TIM10->PSC=3999;
		TIM10->ARR=999;

	}
	while((TIM10->SR & 0x0001) == 0x0000) {  // verifica se o cronômetro foi "setado" (acabou a contagem);
	// enquanto o cronômetro não for "setado para 1", a contagem irá continuar dentro desse while;//
		}
		TIM10->SR&=~(0x0001);  // "resetar" o cronômetro, botando zero no bit em questão;// RESETA O FLAG
	}


int main(void)
{
		RCC->AHB1ENR=0X087;  //liga o clock
		GPIOA->MODER|=0X28555500; //PA 5 COMO SAIDA
		GPIOC->MODER|=0X0002;//BOTAO PC1
		GPIOB->MODER|=0X01;//LED PB0
		RCC->APB2ENR|=0X20000; //HABILITA O CLOCK DO TIMER 10
		TIM10->CR1|=0X05;


  while (1)
  {
	  GPIOB->ODR|=0x1;  // liga o PB0;
	  TIM10->CNT=0;
	  TIM10->SR&=~(0x0001);
	  tempo();
	  GPIOB->ODR&=~(0x1);  // desliga o PB0;
	  tempo();


			  }


	 }
