//Exercício 3 : Mensagem no led.
//O led de status de um equipamento é utilizado para sinalizar sua condição de
//operação, através de uma mensagem visual codificada como piscadas. O
//período da mensagem é de 1s e o tempo de cada piscada é de 100 ms,
//seguido por 100ms com o led apagado.
////////////
//As mensagens seguem a codificação dada pela tabela abaixo:
/////////////////////////////////////////////////////////////////////////
//	Código              |	    N	|	significado						|
//	0(000)				|		0 	|	Sempre aceso Funcionamento ok	|
//	1(001)				|		1 	|	1 Falha de comunicação			|
//	2(010)				|		2 	|	2 Entradas digitais abertas		|
//	3(011)				|		3 	|	3 Termopar aberto				|
//	4(100)				|		4 	|	4 Curto na saída 				|
//	5(101)				|		5   |   5 Fusível aberto				|
/////////////////////////////////////////////////////////////////////////
    //pb5	pb4		pb3
 //	  0      0       0

//O led é ativo em HIGH, conectado ao PA8.
//Utilize os pinos PB3, PB4 e PB5 para entrada do código. Podem ser
//utilizados botões, chaves ou mesmo jumpers.

#include "main.h"

void tempo (void) {
	while((TIM10->SR & 0x1) == 0x0) {}
		TIM10->SR&=~(0x1);
}


int main()
{

	int aux=0;
	RCC->AHB1ENR=0X087;  //liga o clock
	RCC->APB2ENR|=0X20000; //HABILITA O TIMER 10
	RCC->APB2ENR|=0X40000; //HABILITA O TIMER 11
	GPIOA->MODER|=0X10000;//PINO A8 COMO SAIDA
	GPIOB->MODER|=0X00;//pinos b como entrada

	TIM10->PSC=1599;//100ms
	TIM10->ARR=999;//100ms
	TIM10->CR1|=0X05;//habilita o clock

	while(1){

		aux=GPIOB->IDR&0x38; //pinos b3;b4;b5
			  aux=aux>>3;//desloca 3 casas para direita

			  //pisca 1 vez+
		  if(aux==1){
			  GPIOA->ODR=0X100;
			  tempo();
			  GPIOA->ODR=~(0X100);
			  tempo();
			  for (int i = 0; i < 10; i++)
			  	    {
			  tempo ();
			  }
		  }

		  //pisca 2 vezes
		  if(aux==2){
			  for(int i=0;i<2;i++){
			  GPIOA->ODR=0X100;
			  tempo();
			  GPIOA->ODR=~(0X100);
			  tempo();
			  }
			  for (int i = 0; i < 10; i++)
			  	    {
			  tempo ();
			  }
		  }
		  //pisca 3 vezes
		  if(aux==3){
			  for(int i=0;i<3;i++){
			  GPIOA->ODR=0X100;
			  tempo();
			  GPIOA->ODR=~(0X100);
			  tempo();
			  }
			  for (int i = 0; i < 10; i++)
			  	    {
			  tempo ();
			  }
		  }
		  //pisca 4 vezes
		  if(aux==4){
			  for(int i=0;i<4;i++){
			  GPIOA->ODR=0X100;
			  tempo();
			  GPIOA->ODR=~(0X100);
			  tempo();
			  }
			  for (int i = 0; i < 10; i++)
			  	    {
			  tempo ();
			  }
		  }
		  //pisca 5 vezes
		  if(aux==5){
			  for(int i=0;i<5;i++){
			  GPIOA->ODR=0X100;
			  tempo();
			  GPIOA->ODR=~(0X100);
			  tempo();
		  	  }
			  for (int i = 0; i < 10; i++)
			  	    {
			  tempo ();
			  }
		  }

			  if(aux==0){
				  GPIOA->ODR=0X100;
			  }
			  if(aux==6){
				  GPIOA->ODR=0X100;
			  }
			  if(aux==7){
				  GPIOA->ODR=0X100;
			  }

	}
}
