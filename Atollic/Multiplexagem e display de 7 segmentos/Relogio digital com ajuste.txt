

//ALFABETO- TAB
//G-F-E-D-C-B-A
//6-5-4-3-2-1-0 //PINO
//0-0-0-0-0-0-0 //DESLIGADO
//1-0-1-0-1-0-0//->n // 0X54
//0-0-0-0-1-0-0//->i // 0X04
//1-0-1-1-0-0-0//->c // 0X58
//1-0-1-1-1-0-0//->o//  0X5C
//0-1-1-1-0-0-0//->l // 0X38
//1-1-1-0-1-1-1//->a // 0X77
//1-1-0-1-1-0-1//->s // 0X6D
////////////////////////////
//LED-SETE-SEGMENTOS
/////////////////////////
// ___________________ //
//|  _______A_______  |//
//| |               | |//
//| |F             B| |//
//| |               | |//
//|  _______G_______  |//
//| |               | |//
//| |E             C| |//
//| |               | |//
//| |________D______| |//
//|___________________|//
/////////////////////////





#include "main.h"

int display1=0, display2=0, display3=0, display4=0,display5=0,display6=0;
int conta_display=0;
int aux=0;
int teste=0;
int teste2=0;
int TAB[]={0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x27, 0x7F, 0x6F};


void TIM1_UP_TIM10_IRQHandler(){


			if(++display6>9){
				display6=0;

					if(++display5>5){//
						display5=0;

							 if(++display4>9){//min unit 0 a 9
								 display4=0;

								 	 if(++display3>5){//min dez 0 a 6
								 		 display3=0;

								 		 	 if(++display2>9 || (aux ==2 && display2==4)){//testa
								 		 		 	display2=0;
								 		 		 	aux=aux+1;

								 		 		 	if(++display1>2){
								 		 		 		display1=0;
								 		 		 		aux=0;


								 		 		 	}
								 		 	 }
								 	 }
							 }
					}
			}
     TIM10->SR &= ~(0x01);    //limpando flag do timer10
}


void TIM1_TRG_COM_TIM11_IRQHandler(){
    GPIOC->ODR |=0x3FF00;    //desligando todos os displaylays
    GPIOC->ODR &=~0xFF; //limpando os oito bits

	if((GPIOB->IDR&0x01)==0x01 && teste==0){
		teste=1;
		 if(++display4>9){//min unit 0 a 9
					display4=0;
				if(++display3>5){//min dez 0 a 6
						display3=0;

				}
		 }
	}
	if((GPIOB->IDR&0x02)==0x02 && teste2==0){
		teste2=1;
		 if(++display2>9 || (aux ==2 && display2==4)){//testa
									display2=0;
								aux=aux+1;
							if(++display1>2){
								display1=0;
		 		 		 		aux=0;
							}
		 }
	}


    switch(conta_display){
    case 0:
    		GPIOC->ODR |= TAB[display1];
    		GPIOC->ODR &= ~0x100;

    		break;
    case 1:
            GPIOC->ODR |= TAB[display2];
            GPIOC->ODR &= ~0x200;//pc9

            break;
    case 2:
            GPIOC->ODR |= TAB[display3];
            GPIOA->ODR &= ~0x400;//pc10

            break;
    case 3:
            GPIOC->ODR |= TAB[display4];
            GPIOC->ODR &= ~0x800;//pc11

            break;
    case 4:
            GPIOC->ODR |= TAB[display5];
            GPIOC->ODR &= ~0x1000;//pc12
            break;
    case 5:
            GPIOC->ODR |= TAB[display6];
            GPIOC->ODR &= ~0x2000;//pc13

            break;




    }
    if(++conta_display>5)
    	conta_display=0;
    if((GPIOB->IDR&0x01)==0x0 && teste==1){
    		teste=0;

    	}
    if((GPIOB->IDR&0x2)==0x0 && teste2==1){
    		teste2=0;

    	}

     TIM11->SR &= ~(0x01);    //limpando flag do timer10
}
void config_int_tim11(void){
    //configurando o timer11 para 2ms 120 hz em cada led
        RCC->APB2ENR|=0x40000;    //habilita clock timer10
        TIM11->CR1|=0x01;        //habilita contagem timer10
        TIM11->PSC=16;
        TIM11->ARR=999;

        TIM11->DIER|=0x01;        //habilita interrupção timer10
        // Habilita interrupção no controlador
        NVIC_SetPriority(TIM1_TRG_COM_TIM11_IRQn, 3);//Priority 3
        NVIC_EnableIRQ(TIM1_TRG_COM_TIM11_IRQn);//
}
void config_int_tim10(void){
    //configurando o timer10 para 1s
        RCC->APB2ENR|=0x20000;    //habilita clock timer10
        TIM10->CR1|=0x01;        //habilita contagem timer10
        //1 seg psc=15999
        TIM10->PSC=15999;
        TIM10->ARR=999;

        TIM10->DIER|=0x01;        //habilita interrupção timer10
        // Habilita interrupção no controlador
        NVIC_SetPriority(TIM1_UP_TIM10_IRQn, 3);//Priority 3
        NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);//
}


int main(void)
{


	RCC->AHB1ENR=0x87;
    GPIOC->MODER|=0x5555555;
    GPIOA->MODER|=0x28555500;    //pa5 como saída
    GPIOB->MODER|=0X50000;
    //configurando o timer10 para gerar 5segundos
    config_int_tim10();
    config_int_tim11();
     while (1) {

     }
}

